@startuml
!include style.iuml

namespace Qt {
    class QObject
    class QVariant
}

namespace modbus {
    enum TransmitedType {
        Bool,
        Word,
        DoubleWord,
        Real,
        LongReal
    }

    class ModbusElement {
        + string title()
        + uint8_t address()
        + TransmitedType type()
        + string position()
        + string description()
    }

    class ModbusData {
        - value : QVariant
        ' + void setValue(Data)
        + QVariant value()
    }

    namespace io {
        interface IModbusDevice {
            + {abstract} void write(const ModbusData&) = 0
            + [signal] virtual void writed(const ModbusData&)
        }

        interface IModbusElementWriter {
            + {abstract} [signal] virtual void writed(const ModbusData&) = 0
            + {abstract} [signal] virtual void modbusDataChanged(const ModbusData&) = 0

            + {abstract} [slot] virtual void start() = 0
            + {abstract} [slot] virtual void reset() = 0
            + {abstract} [slot] virtual void newModbusData(const ModbusData&) = 0

            + {abstract} virtual void write() = 0        
            + {abstract} virtual bool conditionsMet(const ModbusData&) = 0
        }

        interface IModbusElementReader {
            + ModbusData read() const
        }

        class ModbusPeriodicWriter {
            - QVariant delta
            - Time period
        }

        class ModbusGuardedWriter {
            - [override] bool conditionsMet(const ModbusData&)
            # condition : ModbusData
            # device : IModbusDevice
        }

        class ModbusDelayedWriter {
            - [override] [slot] virtual void newModbusData(const ModbusData&)
            - delay : Time
        }

        class ModbusMultiguardedWriter {
            - [override] bool conditionsMet(const ModbusData&)
            # conditions[]: ModbusData
            # device : IModbusDevice
        }

        class ModbusDelayedMultiguardWriter {
            - [override] [slot] virtual void newModbusData(const ModbusData&)
            - delay : Time
        }
    }
}

    modbus.ModbusElement *-right-- modbus.TransmitedType
    modbus.ModbusElement <|-right- modbus.ModbusData
    modbus.ModbusData *-- Qt.QVariant

    modbus.ModbusData <|-- modbus.io.IModbusElementWriter 
    Qt.QObject <|-down- modbus.io.IModbusElementWriter
    modbus.ModbusData <|-right- modbus.io.IModbusElementReader

    modbus.io.ModbusMultiguardedWriter <|-down- modbus.io.ModbusPeriodicWriter
    modbus.io.ModbusPeriodicWriter "1" *-- "1" modbus.io.IModbusDevice
    modbus.io.ModbusPeriodicWriter "1" *-- "1" Qt.QVariant
    modbus.io.ModbusPeriodicWriter "1" *-- "1" Qt.QTimer

    modbus.io.IModbusElementWriter <|-- modbus.io.ModbusElementImpl

    modbus.io.ModbusElementImpl <|-- modbus.io.ModbusGuardedWriter
    modbus.io.ModbusGuardedWriter "1" *- "1" modbus.io.IModbusDevice
    
    modbus.io.ModbusGuardedWriter <|--- modbus.io.ModbusDelayedWriter
    modbus.io.ModbusDelayedWriter "1" *-- "1" Qt.QTimer
    
    modbus.io.ModbusElementImpl <|-- modbus.io.ModbusMultiguardedWriter 
    modbus.io.ModbusMultiguardedWriter "1" *- "1" modbus.io.IModbusDevice

    modbus.io.ModbusMultiguardedWriter <|--- modbus.io.ModbusDelayedMultiguardWriter
    modbus.io.ModbusDelayedMultiguardWriter "1" *-- "1" Qt.QTimer

@enduml