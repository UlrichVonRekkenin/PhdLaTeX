@startuml

namespace Qt {
    class QTimer {
        +{static} void singleShot(Duration)
    }

    class QObject
    class QVariant
}

namespace modbusio {
    enum TransmitedType {
        Bool,
        Word,
        DoubleWord,
        Real,
        LongReal
    }

    interface IModbusDevice {
        + {abstract} void write(const ModbusData&) = 0
    }

    class ModbusElement {
        + string title()
        + uint8_t address()
        + TransmitedType type()
        + string position()
        + string description()
    }

    class ModbusData {
        - value : QVariant
        ' + void setValue(Data)
        + QVariant value()
    }

    interface IModbusElementWriter {
        + {abstract} [signal] virtual void writed(const ModbusData&) = 0
        + {abstract} [signal] virtual void modbusDataChanged(const ModbusData&) = 0

        + {abstract} [slot] virtual void start() = 0
        + {abstract} [slot] virtual void reset() = 0
        + {abstract} [slot] virtual void newModbusData(const ModbusData&) = 0

        + {abstract} virtual void write() = 0        
        + {abstract} virtual bool conditionsMet(const ModbusData&) = 0
    }

    class ModbusElementWriterImpl {
        + [signal] virtual void writed(const ModbusData&)
        + [signal] virtual void modbusDataChanged(const ModbusData&)

        + [slot] virtual void start()
        + [slot] virtual void reset()
        + [slot] virtual void newModbusData(const ModbusData&)

        # virtual void write()
        # virtual bool conditionsMet(const ModbusData&)
    }

    interface ModbusElementReader {
        + ModbusData read() const
    }

    class ModbusGuardedWriter {
        - [override] bool conditionsMet(const ModbusData&)
        # condition : ModbusData
        # device : IModbusDevice
    }

    class ModbusDelayedWriter {
        - [override] [slot] virtual void newModbusData(const ModbusData&)
        - delay : Time
    }

    class ModbusMultiguardedWriter {
        - [override] bool conditionsMet(const ModbusData&)
        # conditions[]: ModbusData
        # device : IModbusDevice
    }

    class ModbusDelayedMultiguardWriter {
        - [override] [slot] virtual void newModbusData(const ModbusData&)
        - delay : Time
    }

    ModbusElement *-- TransmitedType
    ModbusElement <|-- ModbusData
    ModbusData *-- Qt.QVariant
    
    ModbusData <|-- IModbusElementWriter 
    Qt.QObject <|-- IModbusElementWriter
    ModbusData <|-- ModbusElementReader 

    IModbusElementWriter <|-- ModbusElementWriterImpl

    ModbusElementWriterImpl <|-- ModbusGuardedWriter
    ModbusGuardedWriter "1" *-- "1" IModbusDevice
    
    ModbusGuardedWriter <|-- ModbusDelayedWriter
    ModbusDelayedWriter "1" *-- "1" Qt.QTimer
    
    ModbusElementWriterImpl <|-- ModbusMultiguardedWriter 
    ModbusMultiguardedWriter "1" *-- "1" IModbusDevice

    ModbusMultiguardedWriter <|-- ModbusDelayedMultiguardWriter
    ModbusDelayedMultiguardWriter "1" *-- "1" Qt.QTimer
}

@enduml