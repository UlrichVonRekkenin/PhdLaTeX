@startuml

namespace tools {
    class Timer {
        - duration : millisecond
        +void timeout()
    }
}



namespace modbus {
    enum TransmitedType {
        Bool,
        Word,
        DWord,
        Real,
        LReal
    }

    class ModbusElement {
        + string title()
        + uint8_t address()
        + TransmitedType type()
        + string position()
        + string description()
    }

    class ModbusData {
        - value : Data
        + void setValue(Data)
        + Data value()
    }

    class ModbusElementWriter {
        - duration : millisecond
        + void write()
    }

    class ModbusElementReader {
        + Data read()
    }

    class ModbusGuardedWriter {
        - condition : ModbusData
    }

    class ModbusMultiguardedWriter {
        - conditions[]: ModbusData
    }

    class ModbusDelayedWriter {
        - delay : Timer
    }

    class ModbusDelayedMultiguardWriter {
        - delay : Timer
    }

    ModbusElement *-- TransmitedType
    ModbusElement <|-- ModbusData
    ' 
    ModbusData <|-- ModbusElementWriter 
    ModbusData <|-- ModbusElementReader 
    ' 
    ModbusElementWriter <|-- ModbusGuardedWriter
    ModbusGuardedWriter <|-- ModbusDelayedWriter
    ModbusDelayedWriter "1" *-- "1" tools.Timer
    ' 
    ModbusElementWriter <|-- ModbusMultiguardedWriter 
    ModbusMultiguardedWriter <|-- ModbusDelayedMultiguardWriter
    ModbusDelayedMultiguardWriter "1" *-- "1" tools.Timer
}

@enduml